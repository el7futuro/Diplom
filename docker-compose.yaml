version: '3.9'

services:
  front:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    ports:
     - "8080:80"
    depends_on:
      api:
        condition: service_started
    volumes:
        - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
        - ./static:/usr/share/nginx/html/static/
  api:
    build:
      context: .
    restart: always
    env_file: .env
    environment:
        POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_started
    volumes:
        - ./todolist:/app
  migrations:
    build:
      context: .
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
        - ./todolist:/app
    command: python manage.py migrate
  postgres:
    image: postgres:12.4-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 15
    volumes:
      - ./postgres-data:/var/lib/postgresql/data -700